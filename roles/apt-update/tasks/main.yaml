- name: Run the equivalent of "apt update" as a separate step
  ansible.builtin.apt:
    update_cache: yes

- name: Install a list of packages
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: latest

- name: add GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present

- name: add docker repository to apt
  ansible.builtin.apt_repository:
      repo: deb https://download.docker.com/linux/debian buster stable
      state: present

- name: install docker
  ansible.builtin.apt:
    name: "{{item}}"
    state: latest
    update_cache: yes
  loop:
     - docker-ce
     - docker-ce-cli
     - containerd.io
     - docker-buildx-plugin
     - docker-compose-plugin


# - name: Install packeges
#   ansible.builtin.apt:
#     pkg:
#      - docker-ce
#      - docker-ce-cli
#      - containerd.io
#      - docker-buildx-plugin
#      - docker-compose-plugin

#ansible.builtin.systemd:


#  - name: install vim
#    apt:
#     name: vim
#     become: true
#     update_cache: true
# - name: Create folders keyrings
#   ansible.builtin.command:
#    command: chmod a+r /etc/apt/keyrings/docker.gpg



# - name: Install packeges
#   ansible.builtin.apt:
#     update_cache: yes


# - name: Create folders keyrings
#   ansible.builtin.file:
#     path: /etc/apt/keyrings
#     state: directory
#     mode: '0755'
 

#  - name: add docker repository to apt
#   ansible.builtin.command:
#    command: >
#      echo \
#      "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
#      "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
#      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null